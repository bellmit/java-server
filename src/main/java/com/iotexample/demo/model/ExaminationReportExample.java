package com.iotexample.demo.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ExaminationReportExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    public ExaminationReportExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andExaminationReportIdIsNull() {
            addCriterion("examination_report_id is null");
            return (Criteria) this;
        }

        public Criteria andExaminationReportIdIsNotNull() {
            addCriterion("examination_report_id is not null");
            return (Criteria) this;
        }

        public Criteria andExaminationReportIdEqualTo(Long value) {
            addCriterion("examination_report_id =", value, "examinationReportId");
            return (Criteria) this;
        }

        public Criteria andExaminationReportIdNotEqualTo(Long value) {
            addCriterion("examination_report_id <>", value, "examinationReportId");
            return (Criteria) this;
        }

        public Criteria andExaminationReportIdGreaterThan(Long value) {
            addCriterion("examination_report_id >", value, "examinationReportId");
            return (Criteria) this;
        }

        public Criteria andExaminationReportIdGreaterThanOrEqualTo(Long value) {
            addCriterion("examination_report_id >=", value, "examinationReportId");
            return (Criteria) this;
        }

        public Criteria andExaminationReportIdLessThan(Long value) {
            addCriterion("examination_report_id <", value, "examinationReportId");
            return (Criteria) this;
        }

        public Criteria andExaminationReportIdLessThanOrEqualTo(Long value) {
            addCriterion("examination_report_id <=", value, "examinationReportId");
            return (Criteria) this;
        }

        public Criteria andExaminationReportIdIn(List<Long> values) {
            addCriterion("examination_report_id in", values, "examinationReportId");
            return (Criteria) this;
        }

        public Criteria andExaminationReportIdNotIn(List<Long> values) {
            addCriterion("examination_report_id not in", values, "examinationReportId");
            return (Criteria) this;
        }

        public Criteria andExaminationReportIdBetween(Long value1, Long value2) {
            addCriterion("examination_report_id between", value1, value2, "examinationReportId");
            return (Criteria) this;
        }

        public Criteria andExaminationReportIdNotBetween(Long value1, Long value2) {
            addCriterion("examination_report_id not between", value1, value2, "examinationReportId");
            return (Criteria) this;
        }

        public Criteria andExaminationorderIdIsNull() {
            addCriterion("examinationOrder_id is null");
            return (Criteria) this;
        }

        public Criteria andExaminationorderIdIsNotNull() {
            addCriterion("examinationOrder_id is not null");
            return (Criteria) this;
        }

        public Criteria andExaminationorderIdEqualTo(Long value) {
            addCriterion("examinationOrder_id =", value, "examinationorderId");
            return (Criteria) this;
        }

        public Criteria andExaminationorderIdNotEqualTo(Long value) {
            addCriterion("examinationOrder_id <>", value, "examinationorderId");
            return (Criteria) this;
        }

        public Criteria andExaminationorderIdGreaterThan(Long value) {
            addCriterion("examinationOrder_id >", value, "examinationorderId");
            return (Criteria) this;
        }

        public Criteria andExaminationorderIdGreaterThanOrEqualTo(Long value) {
            addCriterion("examinationOrder_id >=", value, "examinationorderId");
            return (Criteria) this;
        }

        public Criteria andExaminationorderIdLessThan(Long value) {
            addCriterion("examinationOrder_id <", value, "examinationorderId");
            return (Criteria) this;
        }

        public Criteria andExaminationorderIdLessThanOrEqualTo(Long value) {
            addCriterion("examinationOrder_id <=", value, "examinationorderId");
            return (Criteria) this;
        }

        public Criteria andExaminationorderIdIn(List<Long> values) {
            addCriterion("examinationOrder_id in", values, "examinationorderId");
            return (Criteria) this;
        }

        public Criteria andExaminationorderIdNotIn(List<Long> values) {
            addCriterion("examinationOrder_id not in", values, "examinationorderId");
            return (Criteria) this;
        }

        public Criteria andExaminationorderIdBetween(Long value1, Long value2) {
            addCriterion("examinationOrder_id between", value1, value2, "examinationorderId");
            return (Criteria) this;
        }

        public Criteria andExaminationorderIdNotBetween(Long value1, Long value2) {
            addCriterion("examinationOrder_id not between", value1, value2, "examinationorderId");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNull() {
            addCriterion("create_date is null");
            return (Criteria) this;
        }

        public Criteria andCreateDateIsNotNull() {
            addCriterion("create_date is not null");
            return (Criteria) this;
        }

        public Criteria andCreateDateEqualTo(Date value) {
            addCriterion("create_date =", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotEqualTo(Date value) {
            addCriterion("create_date <>", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThan(Date value) {
            addCriterion("create_date >", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("create_date >=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThan(Date value) {
            addCriterion("create_date <", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateLessThanOrEqualTo(Date value) {
            addCriterion("create_date <=", value, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateIn(List<Date> values) {
            addCriterion("create_date in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotIn(List<Date> values) {
            addCriterion("create_date not in", values, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateBetween(Date value1, Date value2) {
            addCriterion("create_date between", value1, value2, "createDate");
            return (Criteria) this;
        }

        public Criteria andCreateDateNotBetween(Date value1, Date value2) {
            addCriterion("create_date not between", value1, value2, "createDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table examination_report
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table examination_report
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}