<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iotexample.demo.dao.MedicalrecordMapper">
  <resultMap id="BaseResultMap" type="com.iotexample.demo.model.Medicalrecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="medicalRecord_id" jdbcType="BIGINT" property="medicalrecordId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="doctor_id" jdbcType="BIGINT" property="doctorId" />
    <result column="symptom" jdbcType="VARCHAR" property="symptom" />
    <result column="medicalRecord_content_first" jdbcType="VARCHAR" property="medicalrecordContentFirst" />
    <result column="medicalRecord_content_finally" jdbcType="VARCHAR" property="medicalrecordContentFinally" />
    <result column="general" jdbcType="VARCHAR" property="general" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="active" jdbcType="INTEGER" property="active" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    medicalRecord_id, user_id, department_id, doctor_id, symptom, medicalRecord_content_first, 
    medicalRecord_content_finally, `general`, create_date, active
  </sql>
  <select id="selectByExample" parameterType="com.iotexample.demo.model.MedicalrecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from medicalrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from medicalrecord
    where medicalRecord_id = #{medicalrecordId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from medicalrecord
    where medicalRecord_id = #{medicalrecordId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.iotexample.demo.model.MedicalrecordExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from medicalrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iotexample.demo.model.Medicalrecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="medicalrecordId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into medicalrecord (user_id, department_id, doctor_id, 
      symptom, medicalRecord_content_first, medicalRecord_content_finally, 
      `general`, create_date, active
      )
    values (#{userId,jdbcType=BIGINT}, #{departmentId,jdbcType=BIGINT}, #{doctorId,jdbcType=BIGINT}, 
      #{symptom,jdbcType=VARCHAR}, #{medicalrecordContentFirst,jdbcType=VARCHAR}, #{medicalrecordContentFinally,jdbcType=VARCHAR}, 
      #{general,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{active,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.iotexample.demo.model.Medicalrecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="medicalrecordId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into medicalrecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="symptom != null">
        symptom,
      </if>
      <if test="medicalrecordContentFirst != null">
        medicalRecord_content_first,
      </if>
      <if test="medicalrecordContentFinally != null">
        medicalRecord_content_finally,
      </if>
      <if test="general != null">
        `general`,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="active != null">
        active,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="symptom != null">
        #{symptom,jdbcType=VARCHAR},
      </if>
      <if test="medicalrecordContentFirst != null">
        #{medicalrecordContentFirst,jdbcType=VARCHAR},
      </if>
      <if test="medicalrecordContentFinally != null">
        #{medicalrecordContentFinally,jdbcType=VARCHAR},
      </if>
      <if test="general != null">
        #{general,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="active != null">
        #{active,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iotexample.demo.model.MedicalrecordExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from medicalrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update medicalrecord
    <set>
      <if test="record.medicalrecordId != null">
        medicalRecord_id = #{record.medicalrecordId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.departmentId != null">
        department_id = #{record.departmentId,jdbcType=BIGINT},
      </if>
      <if test="record.doctorId != null">
        doctor_id = #{record.doctorId,jdbcType=BIGINT},
      </if>
      <if test="record.symptom != null">
        symptom = #{record.symptom,jdbcType=VARCHAR},
      </if>
      <if test="record.medicalrecordContentFirst != null">
        medicalRecord_content_first = #{record.medicalrecordContentFirst,jdbcType=VARCHAR},
      </if>
      <if test="record.medicalrecordContentFinally != null">
        medicalRecord_content_finally = #{record.medicalrecordContentFinally,jdbcType=VARCHAR},
      </if>
      <if test="record.general != null">
        `general` = #{record.general,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.active != null">
        active = #{record.active,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update medicalrecord
    set medicalRecord_id = #{record.medicalrecordId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      department_id = #{record.departmentId,jdbcType=BIGINT},
      doctor_id = #{record.doctorId,jdbcType=BIGINT},
      symptom = #{record.symptom,jdbcType=VARCHAR},
      medicalRecord_content_first = #{record.medicalrecordContentFirst,jdbcType=VARCHAR},
      medicalRecord_content_finally = #{record.medicalrecordContentFinally,jdbcType=VARCHAR},
      `general` = #{record.general,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      active = #{record.active,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iotexample.demo.model.Medicalrecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update medicalrecord
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=BIGINT},
      </if>
      <if test="symptom != null">
        symptom = #{symptom,jdbcType=VARCHAR},
      </if>
      <if test="medicalrecordContentFirst != null">
        medicalRecord_content_first = #{medicalrecordContentFirst,jdbcType=VARCHAR},
      </if>
      <if test="medicalrecordContentFinally != null">
        medicalRecord_content_finally = #{medicalrecordContentFinally,jdbcType=VARCHAR},
      </if>
      <if test="general != null">
        `general` = #{general,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=INTEGER},
      </if>
    </set>
    where medicalRecord_id = #{medicalrecordId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iotexample.demo.model.Medicalrecord">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update medicalrecord
    set user_id = #{userId,jdbcType=BIGINT},
      department_id = #{departmentId,jdbcType=BIGINT},
      doctor_id = #{doctorId,jdbcType=BIGINT},
      symptom = #{symptom,jdbcType=VARCHAR},
      medicalRecord_content_first = #{medicalrecordContentFirst,jdbcType=VARCHAR},
      medicalRecord_content_finally = #{medicalrecordContentFinally,jdbcType=VARCHAR},
      `general` = #{general,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      active = #{active,jdbcType=INTEGER}
    where medicalRecord_id = #{medicalrecordId,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.iotexample.demo.model.MedicalrecordExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from medicalrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>