<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iotexample.demo.dao.ExaminationorderMapper">
  <resultMap id="BaseResultMap" type="com.iotexample.demo.model.Examinationorder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="examinationOrder_id" jdbcType="BIGINT" property="examinationorderId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="medicalRecord_id" jdbcType="BIGINT" property="medicalrecordId" />
    <result column="examination_id" jdbcType="BIGINT" property="examinationId" />
    <result column="examination_type" jdbcType="VARCHAR" property="examinationType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    examinationOrder_id, user_id, medicalRecord_id, examination_id, examination_type
  </sql>
  <select id="selectByExample" parameterType="com.iotexample.demo.model.ExaminationorderExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from examinationorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from examinationorder
    where examinationOrder_id = #{examinationorderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from examinationorder
    where examinationOrder_id = #{examinationorderId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.iotexample.demo.model.ExaminationorderExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from examinationorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iotexample.demo.model.Examinationorder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="examinationorderId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into examinationorder (user_id, medicalRecord_id, examination_id, 
      examination_type)
    values (#{userId,jdbcType=BIGINT}, #{medicalrecordId,jdbcType=BIGINT}, #{examinationId,jdbcType=BIGINT}, 
      #{examinationType,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.iotexample.demo.model.Examinationorder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="examinationorderId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into examinationorder
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="medicalrecordId != null">
        medicalRecord_id,
      </if>
      <if test="examinationId != null">
        examination_id,
      </if>
      <if test="examinationType != null">
        examination_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="medicalrecordId != null">
        #{medicalrecordId,jdbcType=BIGINT},
      </if>
      <if test="examinationId != null">
        #{examinationId,jdbcType=BIGINT},
      </if>
      <if test="examinationType != null">
        #{examinationType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iotexample.demo.model.ExaminationorderExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from examinationorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update examinationorder
    <set>
      <if test="record.examinationorderId != null">
        examinationOrder_id = #{record.examinationorderId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.medicalrecordId != null">
        medicalRecord_id = #{record.medicalrecordId,jdbcType=BIGINT},
      </if>
      <if test="record.examinationId != null">
        examination_id = #{record.examinationId,jdbcType=BIGINT},
      </if>
      <if test="record.examinationType != null">
        examination_type = #{record.examinationType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update examinationorder
    set examinationOrder_id = #{record.examinationorderId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      medicalRecord_id = #{record.medicalrecordId,jdbcType=BIGINT},
      examination_id = #{record.examinationId,jdbcType=BIGINT},
      examination_type = #{record.examinationType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iotexample.demo.model.Examinationorder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update examinationorder
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="medicalrecordId != null">
        medicalRecord_id = #{medicalrecordId,jdbcType=BIGINT},
      </if>
      <if test="examinationId != null">
        examination_id = #{examinationId,jdbcType=BIGINT},
      </if>
      <if test="examinationType != null">
        examination_type = #{examinationType,jdbcType=VARCHAR},
      </if>
    </set>
    where examinationOrder_id = #{examinationorderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iotexample.demo.model.Examinationorder">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update examinationorder
    set user_id = #{userId,jdbcType=BIGINT},
      medicalRecord_id = #{medicalrecordId,jdbcType=BIGINT},
      examination_id = #{examinationId,jdbcType=BIGINT},
      examination_type = #{examinationType,jdbcType=VARCHAR}
    where examinationOrder_id = #{examinationorderId,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.iotexample.demo.model.ExaminationorderExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from examinationorder
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>