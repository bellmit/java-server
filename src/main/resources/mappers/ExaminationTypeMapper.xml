<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.iotexample.demo.dao.ExaminationTypeMapper">
  <resultMap id="BaseResultMap" type="com.iotexample.demo.model.ExaminationType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="examination_type_id" jdbcType="BIGINT" property="examinationTypeId" />
    <result column="examination_type_name" jdbcType="VARCHAR" property="examinationTypeName" />
    <result column="examination_type_detail" jdbcType="VARCHAR" property="examinationTypeDetail" />
    <result column="examination_addr" jdbcType="VARCHAR" property="examinationAddr" />
    <result column="examination_cost" jdbcType="DECIMAL" property="examinationCost" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    examination_type_id, examination_type_name, examination_type_detail, examination_addr, 
    examination_cost
  </sql>
  <select id="selectByExample" parameterType="com.iotexample.demo.model.ExaminationTypeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from examination_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from examination_type
    where examination_type_id = #{examinationTypeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from examination_type
    where examination_type_id = #{examinationTypeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.iotexample.demo.model.ExaminationTypeExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from examination_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.iotexample.demo.model.ExaminationType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="examinationTypeId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into examination_type (examination_type_name, examination_type_detail, 
      examination_addr, examination_cost)
    values (#{examinationTypeName,jdbcType=VARCHAR}, #{examinationTypeDetail,jdbcType=VARCHAR}, 
      #{examinationAddr,jdbcType=VARCHAR}, #{examinationCost,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.iotexample.demo.model.ExaminationType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="examinationTypeId" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into examination_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="examinationTypeName != null">
        examination_type_name,
      </if>
      <if test="examinationTypeDetail != null">
        examination_type_detail,
      </if>
      <if test="examinationAddr != null">
        examination_addr,
      </if>
      <if test="examinationCost != null">
        examination_cost,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="examinationTypeName != null">
        #{examinationTypeName,jdbcType=VARCHAR},
      </if>
      <if test="examinationTypeDetail != null">
        #{examinationTypeDetail,jdbcType=VARCHAR},
      </if>
      <if test="examinationAddr != null">
        #{examinationAddr,jdbcType=VARCHAR},
      </if>
      <if test="examinationCost != null">
        #{examinationCost,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.iotexample.demo.model.ExaminationTypeExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from examination_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update examination_type
    <set>
      <if test="record.examinationTypeId != null">
        examination_type_id = #{record.examinationTypeId,jdbcType=BIGINT},
      </if>
      <if test="record.examinationTypeName != null">
        examination_type_name = #{record.examinationTypeName,jdbcType=VARCHAR},
      </if>
      <if test="record.examinationTypeDetail != null">
        examination_type_detail = #{record.examinationTypeDetail,jdbcType=VARCHAR},
      </if>
      <if test="record.examinationAddr != null">
        examination_addr = #{record.examinationAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.examinationCost != null">
        examination_cost = #{record.examinationCost,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update examination_type
    set examination_type_id = #{record.examinationTypeId,jdbcType=BIGINT},
      examination_type_name = #{record.examinationTypeName,jdbcType=VARCHAR},
      examination_type_detail = #{record.examinationTypeDetail,jdbcType=VARCHAR},
      examination_addr = #{record.examinationAddr,jdbcType=VARCHAR},
      examination_cost = #{record.examinationCost,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.iotexample.demo.model.ExaminationType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update examination_type
    <set>
      <if test="examinationTypeName != null">
        examination_type_name = #{examinationTypeName,jdbcType=VARCHAR},
      </if>
      <if test="examinationTypeDetail != null">
        examination_type_detail = #{examinationTypeDetail,jdbcType=VARCHAR},
      </if>
      <if test="examinationAddr != null">
        examination_addr = #{examinationAddr,jdbcType=VARCHAR},
      </if>
      <if test="examinationCost != null">
        examination_cost = #{examinationCost,jdbcType=DECIMAL},
      </if>
    </set>
    where examination_type_id = #{examinationTypeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iotexample.demo.model.ExaminationType">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update examination_type
    set examination_type_name = #{examinationTypeName,jdbcType=VARCHAR},
      examination_type_detail = #{examinationTypeDetail,jdbcType=VARCHAR},
      examination_addr = #{examinationAddr,jdbcType=VARCHAR},
      examination_cost = #{examinationCost,jdbcType=DECIMAL}
    where examination_type_id = #{examinationTypeId,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.iotexample.demo.model.ExaminationTypeExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from examination_type
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>